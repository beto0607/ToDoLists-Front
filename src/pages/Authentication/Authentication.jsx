//@author: beto0607
//generated by create_container

import React, { useState } from "react";
import { Redirect } from "react-router-dom";

import styles from "./Authentication.module.scss";

import { Login } from "../../components/Login";
import Register from "../../components/Register";
import Layout from "../../layouts/Layout";
import NotificationSystem from "../../components/NotificationSystem";
import { getUserName, getUsername } from "../../utils/utils";

const Authentication = () => {
    const [state, setState] = useState({
        showing: document.location.hash.split("#")[1] || "login",
        messages: [],
        redirect_target: null,
        redirect: false
    });
    const showErrors = errors => {
        errors.forEach(element => {
            element.type = "error";
        });
        setState({ ...state, messages: errors });
    };
    if (state.redirect) return <Redirect to={state.redirect_target} />;
    return (
        <Layout header_props={{ title: "Authentication" }}>
            <div className={styles.container}>
                <div className={styles["options-selector"]}>
                    <a
                        href="#login"
                        onClick={() => {
                            setState({ ...state, showing: "login" });
                        }}
                        className={state.showing === "login" && styles.active}>
                        Login
                    </a>
                    <a
                        href="#register"
                        onClick={() => {
                            setState({ ...state, showing: "register" });
                        }}
                        className={
                            state.showing === "register" && styles.active
                        }>
                        Register
                    </a>
                </div>
                <div className={styles["options-container"]}>
                    <NotificationSystem messages={state.messages} />
                    {state.showing === "login" && (
                        <Login
                            onSuccess={() => {
                                setState({
                                    ...state,
                                    messages: [
                                        {
                                            title: "Welcome back!",
                                            detail:
                                                "It's nice to see you again, " +
                                                getUserName(),
                                            type: "good"
                                        }
                                    ]
                                });
                                setTimeout(() => {
                                    setState({
                                        ...state,
                                        redirect_target: "/dashboard",
                                        redirect: true
                                    });
                                }, 1000);
                            }}
                            onError={showErrors}
                        />
                    )}
                    {state.showing === "register" && (
                        <Register
                            onSuccess={() => {
                                setState({
                                    ...state,
                                    showing: "login",
                                    messages: [
                                        {
                                            title: "Welcome!",
                                            detail:
                                                "Account created, " +
                                                (getUserName()
                                                    ? getUserName()
                                                    : "@" + getUsername()) +
                                                ". You must login now.",
                                            type: "good"
                                        }
                                    ]
                                });
                            }}
                            onError={showErrors}
                        />
                    )}
                </div>
            </div>
        </Layout>
    );
};
export default Authentication;
