//@author: beto0607
//generated by create_container

import React from "react";
import { Redirect } from "react-router-dom";

import styles from "./Authentication.module.scss";

import Login from "../../components/Login";
import Register from "../../components/Register";
import Layout from "../../layouts/Layout";
import NotificationSystem from "../../components/NotificationSystem";

class Authentication extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            showing: document.location.hash.split('#')[1] || 'login',
            base_url: "http://localhost:3001/",
            messages: [],
            redirect_target: null,
            redirect: false
        };

        this.handleLoginClick = this.handleLoginClick.bind(this);
        this.handleRegisterClick = this.handleRegisterClick.bind(this);

        this.loginSuccess = this.loginSuccess.bind(this);
        this.loginError = this.loginError.bind(this);
        this.registerSuccess = this.registerSuccess.bind(this);
        this.registerError = this.registerError.bind(this);

        this.redirect = this.redirect.bind(this);
    }

    redirect(to) {
        this.setState({
            redirect: true,
            redirect_target: to
        });
    }

    loginSuccess(data) {
        this.setState({
            messages: [
                {
                    title: "Welcome back!",
                    detail: String.raw`It's nice to see you again, ${data
                        .included[0].attributes.name ||
                        "@" + data.included[0].attributes.username}!`,
                    type: "good"
                }
            ]
        });
        setTimeout(
            () => {
                this.redirect("/dashboard");
            },
            700,
            this
        );
    }

    loginError(errors) {
        this.setState({
            messages: errors.map(e => {
                return { ...e, type: "error" };
            })
        });
    }
    registerSuccess(data) {}
    registerError(errors) {
        this.setState({
            messages: errors.map(e => {
                return { ...e, type: "error" };
            })
        });
    }
    handleLoginClick() {
        this.setState({ showing: "login" });
    }
    handleRegisterClick() {
        this.setState({ showing: "register" });
    }
    render() {
        if(this.state.redirect){return (<Redirect to={this.state.redirect_target} />);}
        return (
            <Layout header_props={{title:'Authentication'}}>
                <div className={styles.container}>
                    <div className={styles["options-selector"]}>
                        <a
                            href="#login"
                            onClick={this.handleLoginClick}
                            className={
                                this.state.showing === "login"
                                    ? styles.active
                                    : null
                            }>
                            Login
                        </a>
                        <a
                            href="#register"
                            onClick={this.handleRegisterClick}
                            className={
                                this.state.showing === "register"
                                    ? styles.active
                                    : null
                            }>
                            Register
                        </a>
                    </div>
                    <div className={styles["options-container"]}>
                        <NotificationSystem messages={this.state.messages} />
                        {this.state.showing === "login" && (
                            <Login
                                base_url={this.state.base_url}
                                onSuccess={this.loginSuccess}
                                onError={this.loginError}
                            />
                        )}
                        {this.state.showing === "register" && (
                            <Register base_url={this.state.base_url} />
                        )}
                    </div>
                </div>
            </Layout>
        );
    }
}
export default Authentication;
